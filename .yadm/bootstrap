#!/bin/bash
system_type=$(uname -s)

cd $HOME
echo "Init submodules..."
yadm submodule update --recursive --init


function custom_sed() {
    case "$system_type" in
        "Darwin")
            sed -i "" $@
            ;;
        "Linux")
            sed -i $@
            ;;
        *)
            echo "Cannot detect the system ..."
    esac
}


function install_on_common() {
    custom_sed -e "s#prefix=.*#prefix=$HOME/.node_modules#" $HOME/.npmrc
    custom_sed -e "s#/Users/vast/#$HOME/#" $HOME/.aria2/aria2.conf

    if ! command -v cnpm > /dev/null 2>&1; then
        npm install -g cnpm --registry=https://registry.npm.taobao.org
    fi

    # Install vim plugins managed with vim-plug
    if command -v nvim > /dev/null 2>&1; then
        echo "Bootstrapingn Neovim..."
        nvim '+PlugInstall' '+PlugClean!' '+qall'
    fi

    # Installing BaiduPCS-Go
    go get -u -v github.com/iikira/BaiduPCS-Go
}


function install_on_macOS() {
    # install HomeBrew if it's missing.
    if ! command -v brew > /dev/null 2>&1; then
        echo "Installing HomeBrew..."
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi

    if [ -f "$HOME/.Brewfile" ]; then
        echo "Installing apps from Brewfile..."
        brew bundle --global
    fi

    if [ -d "$HOME/.config/iterm2" ]; then
        echo "Setting iTerm2 preference..."
        defaults write com.googlecode.iterm2 "PrefsCustomFolder" -string "$HOME/.config/iterm2"
        defaults write com.googlecode.iterm2 "LoadPrefsFromCustomFolder" -bool true
    fi

    if [ -d "$HOME/.fonts" ]; then
        cp $HOME/.fonts/* $HOME/Library/Fonts
    fi
}


function install_on_ArchLinux() {
    # Change aur mirrors
    sudo curl -o /etc/pacman.d/mirrorlist "https://www.archlinux.org/mirrorlist/?country=CN&country=HK&country=US&protocol=http&protocol=https&ip_version=4&ip_version=6"
    sudo custom_sed -e 's/#Server/Server/g' /etc/pacman.d/mirrorlist && pacman -Syyu --noconfirm
    sudo custom_sed -e "s/#Color/Color/g" /etc/pacman.conf

    if ! command -v yay > /dev/null 2>&1; then
        # Installing yay
        echo "Install Yay..."
        rm -rf /tmp/yay && git clone https://aur.archlinux.org/yay.git /tmp/yay && cd /tmp/yay && makepkg -si --noconfirm
    fi

    echo "Installing from .Pacmanfile..."
    # pacman -Qqen > $HOME/.Pacmanfile
    yay -S --needed --noconfirm - < $HOME/.Pacmanfile
}


case "$system_type" in
    "Darwin")
        install_on_macOS;;
    "Linux")
        install_on_ArchLinux;;
    *)
        echo "Cannot detect the system...";;
esac

install_on_common
